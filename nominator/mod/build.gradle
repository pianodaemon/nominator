description = 'mod'

repositories {

    maven {
        name "DynamoDB Local Release Repository - EU (Frankfurt) Region"
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
}

configurations {
    dynamodb
}

dependencies {

    implementation project(':entities')
    implementation project(':dal')

    // Small client-side database and server that mimics the DynamoDB service
    testImplementation "com.amazonaws:DynamoDBLocal:${dynamo_db_local_version}"
    dynamodb "com.amazonaws:DynamoDBLocal:${dynamo_db_local_version}"

    //SQLite4Java, required by local DynamoDB
    testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'

    // Use JUnit Jupiter for testing.
    testImplementation "org.junit.jupiter:junit-jupiter:${junit_jupiter}"

    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation "com.google.inject:guice:${guice_version}"

    implementation "com.amazonaws:aws-java-sdk:${amazon_sdk_version}"

    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task copyNativeDeps(type: Copy) {
    from configurations.dynamodb {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

test.dependsOn copyNativeDeps
test.doFirst {
    systemProperty "java.library.path", 'build/libs'
<<<<<<< HEAD:nominator/mod/build.gradle
}
=======
}
>>>>>>> master:nominator.dal/app/build.gradle
