plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
        name "DynamoDB Local Release Repository - EU (Frankfurt) Region"
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
}

configurations {
    dynamodb
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // Small client-side database and server that mimics the DynamoDB service
    testImplementation 'com.amazonaws:DynamoDBLocal:1.11.477'
    dynamodb 'com.amazonaws:DynamoDBLocal:1.11.477'

    //SQLite4Java, required by local DynamoDB
    testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation 'com.amazonaws:aws-java-sdk:1.12.319'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

application {
    // Define the main class for the application.
    mainClass = 'com.immortalcrab.nominator.dal.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


task copyNativeDeps(type: Copy) {
    from configurations.dynamodb {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

test.dependsOn copyNativeDeps
test.doFirst {
    systemProperty "java.library.path", 'build/libs'
}